version: "3.7"

networks:
  test-bench.srv.network:
    driver: bridge
  test-bench.elk.network:
    driver: bridge
  test-bench.metrics.network:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  es01:
    driver: local

services:

  user:
    build: ../user
    restart: always
    networks:
      - test-bench.srv.network
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: service.logback.user

  gateway:
    build: ../gateway
    restart: always
    environment:
      SECRET: password
      BACKEND_URL: http://user:8080/
    networks:
      - test-bench.srv.network
    ports:
      - 8081:8080
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: service.logback.gateway


  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - test-bench.srv.network
      - test-bench.metrics.network
    ports:
      - 8101:9090
    restart: always

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    networks:
      - test-bench.metrics.network
    ports:
      - 8102:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8103:8080
    networks:
      - test-bench.srv.network
      - test-bench.metrics.network
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 8104:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - test-bench.metrics.network
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 8105:9100
    networks:
      - test-bench.srv.network
      - test-bench.metrics.network
    restart: always


  elasticsearch:
    image: elasticsearch:7.6.0
    expose:
      - 9200
    networks:
      - test-bench.elk.network
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es01:/usr/share/elasticsearch/data
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: service.efk.elasticsearch

  kibana:
    image: kibana:7.6.0
    networks:
      - test-bench.elk.network
    links:
      - "elasticsearch"
    ports:
      - "8106:5601"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        fluentd-async-connect: 'true'
        fluentd-retry-wait: '1s'
        fluentd-max-retries: '30'
        tag: service.efk.kibana

  fluentd:
    build: ../fluentd
    links:
      - "elasticsearch"
    networks:
      - test-bench.srv.network
      - test-bench.elk.network
    volumes:
      - ./fluentd/:/fluentd/etc/
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    logging:
      driver: "json-file"
      options:
        max-size: "1G"
        max-file: "2"