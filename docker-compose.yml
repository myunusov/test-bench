version: "3.7"

networks:
  test-bench.srv.network:
    driver: bridge
  test-bench.elk.network:
    driver: bridge
  test-bench.metrics.network:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:

  user:
    build: ../user
    restart: always
    networks:
      - test-bench.srv.network

  gateway:
    build: ../gateway
    restart: always
    environment:
      SECRET: password
      BACKEND_URL: http://user:8080/
    networks:
      - test-bench.srv.network
    ports:
      - 8081:8080

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - test-bench.srv.network
      - test-bench.metrics.network
    ports:
      - 8101:9090
    restart: always

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    networks:
      - test-bench.metrics.network
    ports:
      - 8102:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8103:8080
    networks:
      - test-bench.srv.network
      - test-bench.metrics.network
    restart: always

#  alertmanager:
#    image: prom/alertmanager
#    ports:
#      - 8104:9093
#    volumes:
#      - ./alertmanager/:/etc/alertmanager/
#    networks:
#      - test-bench.metrics.network
#    restart: always
#    command:
#      - '--config.file=/etc/alertmanager/config.yml'
#      - '--storage.path=/alertmanager'

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 8105:9100
    networks:
      - test-bench.srv.network
      - test-bench.metrics.network
    restart: always